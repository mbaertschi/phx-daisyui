name: CI/CD

on:
  - push

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Restore cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock', '**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - run: mix deps.get
      - run: mix compile
      - run: mix dialyzer --plt

      - name: Save cache
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock', '**/.tool-versions') }}

      - run: mix assets.setup
      - run: mix assets.build
      - run: mix compile --warnings-as-errors
      - run: mix lint
      - run: mix test

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: test/reports/test-junit-report.xml
        if: always()

  build:
    name: Build Docker image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4v3

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag phx_daisy_ui:$(date +%s)
